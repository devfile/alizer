on:
  push:
    tags:
      - 'v*'

name: Build Release

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        goosarch:
          - 'darwin/amd64'
          - 'darwin/arm64'
          - 'linux/amd64'
          - 'linux/arm64'
          - 'linux/ppc64le'
          - 'linux/s390x'
          - 'windows/amd64'
    steps:
      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: 'go.mod'
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          RELEASE_VERSION=${GITHUB_REF#refs/*/}
          if [ "$GOOS" == "windows" ]
          then
            BINARY_NAME=alizer-$RELEASE_VERSION-$GOOS-$GOARCH.exe
          else
            BINARY_NAME=alizer-$RELEASE_VERSION-$GOOS-$GOARCH
          fi
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v
      - name: Release with Notes and Binaries
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          draft: false
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
